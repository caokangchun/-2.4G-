#ifndef	__KEY_H__
#define	__KEY_H__


#include "Common.h"
#include "BSP.h"


typedef enum
{
    BSP_KEY_TYPE_NONE,
    BSP_KEY_TYPE_SHORT,
    BSP_KEY_TYPE_LONG
}
Key_Type;

typedef enum
{
	BSP_KEY_MODE_PRESS,		//按键按下
	BSP_KEY_MODE_RELEASE	//按键松开
}
Key_Mode;

typedef struct
{
    Key_Type Type;
    uint8_t Value;
}
Key_Signal;


//*******************************************************************
//作用：按键初始化 
//参数：无
//返回：无
//*******************************************************************
extern bool BSPKeyInit(void);
//*******************************************************************
//作用：按键使能
//参数：无
//返回：无
//*******************************************************************
extern void BSPKeyEnable(void);
//*******************************************************************
//作用：按键除能
//参数：无
//返回：无
//*******************************************************************
extern void BSPKeyDisable(void);
//*******************************************************************
//作用：查询按键是否允许读
//参数：无
//返回：TRUE-有按键可以读出
//      FALSE-无按键可以读出
//*******************************************************************
extern bool BSPKeyAllowRead(void);
//*******************************************************************
//作用：读取按键键值
//参数：无
//返回：按键键值
//*******************************************************************
extern Key_Signal BSPKeyRead(void);
//*******************************************************************
//作用：按键周期性任务
//参数：无
//返回：无
//*******************************************************************
extern void BSPKeyRoutine(void);
//*******************************************************************
//作用：按键模式设置
//参数：无
//返回：无
//*******************************************************************
extern void BSPKeyModeSet(Key_Mode Mode);

#endif



