





#ifndef	__BSPHID_H__
#define	__BSPHID_H__


#include "Common.h"
#include "BSP.h"

#include "HAL_device.h"
#include "usb_istr.h"
#include "usb_lib.h"
#include "usb_desc.h"
#include "usb_pwr.h"
#include "hw_config.h"
#include <string.h>
#include "platform_config.h"

#define CUSTOMHID_DATA_SIZE                     64 //HID通信的size，一旦定下说有数据包的长度都应按照这个长度通信



//HID键盘函数
//使用注意：
//*1、若没有要求，电流填0xfa即可
//*2、上传间隔设置只有在第一次USB初始化时有效
//*3、BSPHIDReport的keybuff的内容请按照，HIDKeyboard的发送格式填写，如
//	{0x02,0x00,0x04,0,0,0,0,0}即为发送一个大写A
//*4、在上传完一组数据后要BSPHIDClrLastKey一下，不然会无限重发最后一个字符
//	当然使用BSPHIDReport+BSPHIDWaitOver也可以做到BSPHIDClrLastKey一样
//	功能
//*******************************************************************
//作用：HID初始化,此初始化后需要一定时间才能输入，具体时间根据电脑性能不同
//		约为100~2000ms，
//参数：interval - 上传间隔，对应关系为0x01 - 1ms。推荐0x01~0x20;
//		power - 设备最大电流0x01~0xfa，电脑供给USB设备的最大电流，每单位
//		2ma，推荐0xFA - 500ma;
//返回：无
//*******************************************************************
extern void BSPHIDInit(uint8_t interval, uint8_t power);
//*******************************************************************
//作用：输入HID健值，此值为键盘值，可以输入控制键和普通键。
//参数：keybuff - 键值输入缓冲
//		len - 输入数据长度，支持1～7
//返回：无
//*******************************************************************
extern bool BSPHIDReport( uint8_t* keybuff, uint8_t len );
//*******************************************************************
//作用：等待电脑读取，每个键位发送后都要等待电脑取走才能输入下一个按键，
//		这个等待间隔有大致1~3ms
//参数：无
//返回：TRUE - 发送正常
//		FALSE - 发送异常
//*******************************************************************
extern bool BSPHIDWaitOver(void);
//*******************************************************************
//作用：清除残留按键按下的状态，当健值输出完毕后可以使用该函数清除所有按键
//		按下的状态。
//参数：无
//返回：无
//*******************************************************************
extern void BSPHIDClrResidueKey(void);




//HID通信函数
//使用注意：
//*1、HID通信也需要运行BSPHIDInit初始化
//*1、如果使用到接收功能，一定要先配置接收缓存
//*2、发送的长度是定长的
//*3、若没有取走接收数据，请及时ClrHIDRxFLAG，否则数据不会更新
//*4、发送后一定要先执行BSPHIDCustomWaitOver()

//*******************************************************************
//作用：配置HID通信接收缓存，配置完HID的读数据将会保存到该缓存中，由SetHidRxFlag
//		提示数据到来，接收长度恒定且由CUSTOMHID_DATA_SIZE决定
//参数：ary - 配置的缓存指针
//返回：无
//*******************************************************************
extern void ConfigHidRxBuff(uint8_t * ary);
//*******************************************************************
//作用：清除接收标志，当读完接收缓存后要手动清除
//参数：无
//返回：无
//*******************************************************************
extern void ClrHidRxFlag(void);
//*******************************************************************
//作用：获取接收标志，当PC端有数据来时Flag会拉高
//参数：无
//返回：TRUE - 有数据
//		FALSE - 没数据
//*******************************************************************
extern bool GetHidRxFlag(void);
//*******************************************************************
//作用：向PC发送HID信息，信息长度恒定且由CUSTOMHID_DATA_SIZE决定
//参数：txBuff - 发送数据的缓存
//返回：无
//*******************************************************************
extern void BSPHIDCustomReport(uint8_t* txBuff);
//*******************************************************************
//作用：等待电脑读取，每个数据发送后都要等待电脑取走才能输入下一组数据，
//		这个等待间隔有大致1~3ms
//参数：无
//返回：TRUE - 发送正常
//		FALSE - 发送异常
//*******************************************************************
extern bool BSPHIDCustomWaitOver(void);
#endif


