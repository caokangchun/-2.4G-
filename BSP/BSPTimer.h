#ifndef	__TIMER_H__
#define	__TIMER_H__


#include "Common.h"
#include "BSP.h"


//*******************************************************************
//作用：系统时基定时器初始化，内部固定1ms中断一次
//参数：无
//返回：TRUE-成功
//      FALSE-失败 
//*******************************************************************
extern bool BSPTimerInit(void);

//*******************************************************************
//作用：创建间隔执行的定时器，误差+-1ms
//参数：Function-添加当定时器中断时执行的程序
//		Scale-定时比例，代表程序执行的时间间隔，单位1ms
//返回：1至10-定时器编号
//      0-失败 
//*******************************************************************
extern uint8_t BSPTimerIntervalCreate(CallBackISR Function, uint16_t Scale);

//*******************************************************************
//作用：删除间隔执行的定时器
//参数：TimerNum-定时器编号
//返回：无
//*******************************************************************
extern void BSPTimerIntervalDestroy(uint8_t TimerNum);

//*******************************************************************
//作用：创建执行一次的定时器，误差+-1ms
//参数：Function-添加当定时器中断时执行的程序
//		Scale-定时比例，代表程序执行的等待时间，单位1ms
//返回：TRUE-成功
//      FALSE-失败 
//*******************************************************************
extern bool BSPTimerOnceCreate(CallBackISR Function, uint16_t Scale);

//*******************************************************************
//作用：等待方式延时
//参数：Scale-延时比例，代表延时时间，最大值500，最小值50，单位1us
//返回：无
//*******************************************************************
extern void BSPTimerDelay(uint16_t Scale);




#endif



